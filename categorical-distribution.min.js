/*! categorical-distribution - v6.0.0 - 2014-06-27
 * https://github.com/axelpale/categorical-distribution-js
 *
 * Copyright (c) 2014 Akseli Palen <akseli.palen@gmail.com>;
 * Licensed under the MIT license */


!function(a){"use strict";var b={},c=function(a){return"[object Array]"===Object.prototype.toString.call(a)},d=function(a){return"string"==typeof a||"number"==typeof a?[a]:c(a)?a:[]},e=function(a,b){return Math.random()*(b-a)+a},f=function(a,b,c){var d,e,f,g=[];if("number"!=typeof a&&(a=1),1>a)return g;for(g.push(1-Math.pow(Math.random(),1/a)),d=1;a>d;d+=1)e=g[g.length-1],f=1-Math.pow(Math.random(),1/(a-d)),g.push(e+(1-e)*f);for(d=0;a>d;d+=1)g[d]=b+(c-b)*g[d];return g},g=function(a){for(var b,c,d=a.length;d>0;)c=Math.floor(Math.random()*d),d-=1,b=a[d],a[d]=a[c],a[c]=b;return a},h=function(a){if(null===a||"object"!=typeof a)return a;var b=a.constructor();for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b};b.util={isArray:c,toArray:d,randomFromInterval:e,randomOrderedSetFromInterval:f,shuffle:g,clone:h},b.CategoricalDistribution=function(){var a={},b=777;a.EXAMPLE=b;var c=function(){this.name="NotAnArrayException",this.message="Parameter is required to be an array"},d=function(){this.name="InvalidDumpException",this.message="Dump cannot be loaded because of invalid syntax."},i=function(){this.name="InvalidDistributionException",this.message="Distribution is in unknown form."},j=function(){this.name="InvalidWeightException",this.message="Weight must be a number."},k=function(){this.name="OverflowException",this.message="A value grew greater than is possible to represent."};a.NotAnArrayException=c,a.InvalidDumpException=d,a.InvalidDistributionException=i,a.InvalidWeightException=j,a.OverflowException=k;var l=function(a,b){return 0===b?0:a/b},m=function(a,b,c){var d,e,f,g,h=a.state;if(f=h.wSum,h.w.hasOwnProperty(b)?d=h.w[b]:(d=0,h.order.push(b),h.indices[b]=h.order.length-1),e=d+c,0>e?(e=0,g=f-d):g=f+c,e>Number.MAX_VALUE)throw new k;if(g>Number.MAX_VALUE)throw new k;h.w[b]=e,h.wSum=g,n(a,b)},n=function(a,b){var c,d,e,f,g,h,i;if(c=a.state,d=c.indices[b],e=c.w[b],g=d===c.order.length-1,h=0===d,f=g?!0:h?!1:c.w[c.order[d-1]]<e?!0:!1)for(;0!==d&&c.w[c.order[d-1]]<=e;)i=c.order[d-1],c.order[d]=i,c.order[d-1]=b,c.indices[i]=d,d-=1;else for(;d!==c.order.length-1&&c.w[c.order[d+1]]>e;)i=c.order[d+1],c.order[d]=i,c.order[d+1]=b,c.indices[i]=d,d+=1;c.indices[b]=d},o=function(a,b){var c,d,f,g,h,i=[],j=a.state;if(0===j.order.length||0>=b)return i;for(g=j.wSum,d=0;b>d;d+=1)for(c=e(0,g),h=0,f=0;f<j.order.length;f+=1)if(h+=j.w[j.order[f]],h>c){i.push(j.order[f]);break}return i},p=function(a,b){var c,d,e,g,h,i,j=[],k=a.state;if(0===k.order.length||0>=b)return j;for(e=k.wSum,c=f(b,0,e),d=0,g=k.w[k.order[d]],h=0;b>h;h+=1)if(i=c[h],g>i)j.push(k.order[d]);else{do d+=1,g+=k.w[k.order[d]];while(i>=g);j.push(k.order[d])}return j},q=function(){this.state={w:{},wSum:0,order:[],indices:{}}};return a.create=function(){return new q},q.prototype.prob=function(a){var b,c,d,e,f=this.state;for("string"==typeof a?(a=[a],c=!0):c=!1,"undefined"==typeof a&&(a=f.order),b=[],d=0;d<a.length;d+=1)e=a[d],b.push(f.w.hasOwnProperty(e)?l(f.w[e],f.wSum):0);return c?b[0]:b},q.prototype.head=function(a){var b=this.state;return"number"!=typeof a&&(a=b.order.length),a=Math.min(a,b.order.length),a>0?b.order.slice(0,a):[]},q.prototype.peak=function(a){var b,c,d,e=this.state;if(0===e.order.length)return[];for(c=e.w[e.order[0]],d=c-c*a,b=1;b<e.order.length&&!(d>e.w[e.order[b]]);b+=1);return e.order.slice(0,b)},q.prototype.subset=function(a){var b,c,d,e,f,g,h,i=this.state;for(e={},f=0,g=[],h={},"string"==typeof a&&(a=[a]),b=0;b<a.length;b+=1)c=a[b],i.w.hasOwnProperty(c)&&(e[c]=i.w[c],f+=i.w[c]);for(b=0;b<i.order.length;b+=1)c=i.order[b],e.hasOwnProperty(c)&&(g.push(c),h[c]=g.length-1);return d=new q,d.state.w=e,d.state.wSum=f,d.state.order=g,d.state.indices=h,d},q.prototype.rank=function(a){var b,c,d,e=this.state;if("string"==typeof a)return e.indices.hasOwnProperty(a)?e.indices[a]:1/0;for("undefined"==typeof a&&(a=e.order),b=[],c=0;c<a.length;c+=1)d=a[c],b.push(e.indices.hasOwnProperty(d)?e.indices[d]:1/0);return b},q.prototype.each=function(a,b){var c,d,e,f,g,h=this.state;g=h.order.slice(0);var i=g.length;for(c=0;i>c;c+=1)d=g[c],e=l(h.w[d],h.wSum),f=h.indices[d],a.call(b,d,e,f);return this},q.prototype.map=function(a,b){var c=[];return this.each(function(d,e,f){c.push(a.call(b,d,e,f))}),c},q.prototype.sample=function(a,b){var c,d,e=this.state;return"number"!=typeof a&&(a=1),"boolean"!=typeof b&&(b=!1),b?d=p(this,a):(c=e.order.length>30,d=c?g(p(this,a)):o(this,a)),d},q.prototype.numCategories=function(){return this.state.order.length},q.prototype.dump=function(){var a,b,c=this.state,d=[];for(a=0;a<c.order.length;a+=1)b=c.order[a],d.push(b),d.push(c.w[b]);return d},q.prototype.copy=function(){var a=new q;return a.load(this.dump()),a},q.prototype.print=function(a){var b,c,d,e,f,g=this.state,h=0,i=g.order.length,j="";for("number"!=typeof a&&(a=2),a=Math.max(Math.min(a,10),0),e=this.prob(g.order),b=0;i>b;b+=1)c=g.order[b],h=Math.max(h,c.length);for(b=0;i>b;b+=1){for(c=g.order[b],d=e[b],f=c.length;h>f;f+=1)c+=" ";j+=c+" "+d.toFixed(a)+"\n"}return j},q.prototype.learn=function(a,b){var c,d;if(d=this.state,"string"==typeof a&&(a=[a]),"undefined"==typeof b&&(b=1),"number"!=typeof b)throw new j;for(c=0;c<a.length;c+=1)m(this,a[c],b);return this},q.prototype.unlearn=function(a,b){if("undefined"==typeof b&&(b=1),"number"!=typeof b)throw new j;return this.learn(a,-b)},q.prototype.dist=function(a){var b,c,d,e,f,g,j,k,m;if(b=this.state,"undefined"==typeof a){if(0===b.wSum)return h(b.w);c={};for(d in b.w)b.w.hasOwnProperty(d)&&(c[d]=l(b.w[d],b.wSum));return c}if("object"!=typeof a)throw new i;e={},f=0,g=[];for(d in a)if(a.hasOwnProperty(d)){if(k=a[d],!(k>=0))throw new i;e[d]=k,f+=k,g.push(d)}if(isNaN(f)||1/0===f)throw new i;for(g.sort(function(a,b){return e[b]-e[a]}),j={},m=0;m<g.length;m+=1)j[g[m]]=m;return b.w=e,b.wSum=f,b.order=g,b.indices=j,this},q.prototype.load=function(a){var b,c,e,f;if(a.length%2!==0)throw new d;for(f={w:{},wSum:0,order:[],indices:{}},b=0;b<a.length;b+=2)c=a[b],e=a[b+1],f.w[c]=e,f.wSum+=e,f.order.push(c),f.indices[c]=f.order.length-1;return this.state=f,this},a.extension=q.prototype,a}(),b.version="6.0.0",b.CategoricalDistribution.util=b.util,"object"==typeof module&&"object"==typeof module.exports?module.exports=b.CategoricalDistribution:a.CategoricalDistribution=b.CategoricalDistribution}(this);
//# sourceMappingURL=categorical-distribution.min.map